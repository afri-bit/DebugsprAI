name: "Auto Bugfix"

on:
  workflow_dispatch:

env: 
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

jobs:
  bugfix:
    
    runs-on: ubuntu-22.04

    steps:
      - name: "Checkout Project Repository"
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: List Files for Debugging
        run: ls -al
      
      - name: Setup the necessary project elements
        run:|
          mkdir -p .airesults/project

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Set up GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Fetch Issue Markdown
        run: |
          gh issue view 2 --repo ${{ github.repository }} --json body -q .body > .airesults/issue.md

      - name: Show fetched Markdown
        run: cat ./.airesults/issue.md

      - name: Parse the markdown issue
        run: |
          debugsprai parse ./.airesults/issue.md --output ./.airesults/issue.json

      - name: Show parsed issue
        run: |
          cat ./.airesults/issue.json

      - name: Run Bug Spray
        run: |
          debugsprai debug ./.airesults/issue.md

          ls -al .airesults

      - name: Copy files from ai results to the project directory
        run: |
          PROJECT_DIR=$(jq -r '.project_dir' ./.airesults/issue.json)
          cp -r .airesults/project/* $PROJECT_DIR

      - name: Check for Changes
        id: check_diff
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected"
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          else
            echo "No changes found"
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          fi

      - name: Create and Push a New Branch
        if: env.HAS_CHANGES == 'true'
        run: |
          # Configure Git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH_NAME="auto-update-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "Auto update: changes detected"
          git push origin $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.HAS_CHANGES == 'true'
        run: |
          gh pr create --title "Auto Update: Changes Detected" \
                       --body "This PR contains automatically detected changes." \
                       --base main \
                       --head $BRANCH_NAME \
                       --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
